trigger:
- main  # Trigger pipeline on changes to the 'main' branch

pool:
  vmImage: ubuntu-latest  # Use a Microsoft-hosted agent

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: "-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)"

stages:
- stage: Build
  jobs:
  - job: Build_Java_App
    steps:
    # Step 1: Set up Java
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'  # Use Java 17 (adjust to your JDK version)
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # Step 2: Cache Maven dependencies to speed up future runs
    - task: Cache@2
      inputs:
        key: 'maven | "$(Agent.OS)" | **/pom.xml'
        restoreKeys: |
          maven | "$(Agent.OS)"
        path: $(MAVEN_CACHE_FOLDER)
    
    # Step 3: Build and test with Maven
    - script: |
        mvn clean install
      displayName: 'Maven Build & Test'
    
    # Step 4: Publish test results
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'Java Unit Tests'
    
    # Step 5: Publish JAR as a pipeline artifact
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'target/*.jar'  # Path to the built JAR
        artifactName: 'java-app'